image: node:20

options:
  max-time: 15 # mins
  docker: true

definitions:
  services:
    docker:
      memory: 2048 # mb

  caches:
    npm: ${HOME}/.npm

  steps:
    - step: &sonar
        name: Sonar
        script:
          - pipe: sonarsource/sonarcloud-scan:2.0.0

    - step: &lint
        name: Lint
        caches:
          - node
        script:
          - npm ci --prefer-offline
          - npm run lint

    - step: &build
        name: Build
        caches:
          - npm
        script:
          - npm ci --prefer-offline
          - npm run build
        artifacts:
          - dist/**

    - step: &deploy-container
        name: Deploy Container
        image: google/cloud-sdk:latest
        services:
          - docker
        script:
          - export PATH=/usr/bin:$PATH
          - export DOCKER_CONTAINER=eu.gcr.io/usmedia-containers/giz-costing-tool-api
          - echo ${GCP_BITBUCKET_PIPELINE_SA} | base64 --decode --ignore-garbage > client-secret.json
          - gcloud auth activate-service-account --key-file client-secret.json && rm client-secret.json
          - gcloud auth configure-docker
          - docker build -t ${DOCKER_CONTAINER}:${BITBUCKET_COMMIT} --file ./config/Dockerfile .
          - docker push ${DOCKER_CONTAINER}:${BITBUCKET_COMMIT}
          - docker tag ${DOCKER_CONTAINER}:${BITBUCKET_COMMIT} ${DOCKER_CONTAINER}:${BITBUCKET_BRANCH}
          - docker push ${DOCKER_CONTAINER}:${BITBUCKET_BRANCH}
          - echo "Container - ${DOCKER_CONTAINER}:${BITBUCKET_COMMIT}"

    - step: &deploy-infra
        name: Deploy Infra
        image: pulumi/pulumi-nodejs:latest
        script:
          - cd infra/
          - export DOCKER_CONTAINER=eu.gcr.io/usmedia-containers/giz-costing-tool-api
          - echo ${GCP_BITBUCKET_PIPELINE_SA} | base64 --decode --ignore-garbage > client-secret.json
          - export GOOGLE_CREDENTIALS=`pwd`/client-secret.json
          - npm ci
          - pulumi stack select -s ${PULUMI_STACK}
          - pulumi config set cloudrun:container ${DOCKER_CONTAINER}:${BITBUCKET_COMMIT}
          - pulumi up --yes --refresh
          - rm client-secret.json

    - step: &deploy-old
        name: Deploy (OLD)
        image: google/cloud-sdk:latest
        services:
         - docker
        script:
          - export PATH=/usr/bin:$PATH
          - export DOCKER_CONTAINER=eu.gcr.io/usmedia-containers/giz-costing-tool-api
          - echo ${GCP_BITBUCKET_PIPELINE_SA} | base64 --decode --ignore-garbage > client-secret.json
          - gcloud auth activate-service-account --key-file client-secret.json && rm client-secret.json
          - gcloud config set project ${GOOGLE_PROJECT_ID_OLD}
          - gcloud config set run/region europe-west4
          - apt-get update && apt-get install gettext-base
          - >
            envsubst < config/cloudrun-${BITBUCKET_DEPLOYMENT_ENVIRONMENT}.yml > config/cloudrun-${BITBUCKET_DEPLOYMENT_ENVIRONMENT}.tmp.yml
            && mv config/cloudrun-${BITBUCKET_DEPLOYMENT_ENVIRONMENT}.tmp.yml config/cloudrun-${BITBUCKET_DEPLOYMENT_ENVIRONMENT}.yml
          - gcloud run services replace config/cloudrun-${BITBUCKET_DEPLOYMENT_ENVIRONMENT}.yml

pipelines:
  pull-requests:
    '**':
      - parallel:
          steps:
            - step: *lint
            - step: *sonar

  branches:
    develop:
      - step: *build
      - step:
          <<: *deploy-container
      - step:
          name: Deploy to staging
          deployment: staging
          <<: *deploy-old
      - step:
          name: Deploy to staging with pulimi
          deployment: staging
          trigger: manual
          <<: *deploy-infra

#    develop:
#      - step: *build
#      - step:
#          <<: *deploy-container
#      - step:
#          <<: *deploy-infra
#          deployment: staging
#      - step: *sonar

#    master:
#      - step: *build
#      - step:
#          <<: *deploy-container
#      - step:
#          <<: *deploy-infra
#          deployment: production
